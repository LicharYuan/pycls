# build for predictor
# here we use regnet search space to sample
MODEL:
  TYPE: anynet
  NUM_CLASSES: 1000
ANYNET:
  STEM_TYPE: res_stem_in
  STEM_W: 64
  BLOCK_TYPE: res_bottleneck_block
  STRIDES: [1, 2, 2, 2]
  DEPTHS: [16, 16, 16, 16] #  search range 1-16
  WIDTHS: [1024, 1024, 1024, 1024] # search range 1-8 part
  BOT_MULS: [0.25, 0.25, 0.25, 0.25] # {1,2,4}
  GROUP_WS: [64, 128, 256, 512] 
  # group = w_out * bot_muls // group_ws # {1,2,...,32} sample group but convert 
  # group_ws = w_out * bot_muls // groups 
OPTIM:
  LR_POLICY: cos
  BASE_LR: 0.8
  MAX_EPOCH: 10
  MOMENTUM: 0.9
  WEIGHT_DECAY: 5e-5
TRAIN:
  DATASET: imagenet
  IM_SIZE: 224
  BATCH_SIZE: 1024
TEST:
  DATASET: imagenet
  IM_SIZE: 256
  BATCH_SIZE: 800
NUM_GPUS: 8
OUT_DIR: .
